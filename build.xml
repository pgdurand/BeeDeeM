<?xml version="1.0" encoding="utf-8"?>

<!-- ============================================================= -->
<project name="BeeDeeM" default="help" basedir=".">

	<property name="lbasedir" value="${basedir}" />

	<property name="compile.optimize" value="on" />
	<property name="compile.debug" value="off" />
	<property name="compile.deprecation" value="off" />

	<property file="${basedir}/src/bzh/plealog/dbmirror/main/version.properties" />

	<property name="src" value="${lbasedir}/src" />
	<property name="jar" value="${lbasedir}/jar" />
	<property name="conf" value="${lbasedir}/conf" />
	<property name="lib" value="${lbasedir}/lib" />
	<property name="external" value="${lbasedir}/external" />
	<property name="scripts" value="${lbasedir}/scripts" />
	<property name="doc" value="${lbasedir}/doc" />

	<property name="distrib" value="${lbasedir}/distrib" />

	<property name="Dsrc" value="${distrib}/src" />
	<property name="Dbin" value="${distrib}/bin" />
	<property name="Dconf" value="${distrib}/conf" />
	<property name="Dlib" value="${distrib}/lib" />
	<property name="Ddoc" value="${distrib}/doc" />
	<property name="Dtr" value="${distrib}/tests-result" />
	<property name="Dscripts" value="${distrib}/scripts" />
	<property name="Dexternal" value="${distrib}/external" />

	<property name="appname" value="${prg.name}-${prg.version}" />
	<property name="appjar" value="${appname}.jar" />
	<property name="apptar" value="${appname}.tar" />
	<property name="kbapisappname" value="${prg.name}-${prg.version}-api" />
	<property name="kbapijar" value="${kbapisappname}.jar" />

	<property name="rootpkg" value="bzh.plealog.dbmirror.main" />
	<property name="KLMirrorClass" value="${rootpkg}.CmdLineInstaller" />
	<property name="KANT_ZIP" value="ant-1.9.4.zip" />
	
	<path id="class.path">
		<pathelement path="${classpath}" />
		<fileset dir="${jar}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${lib}" />
	</path>

	<path id="distribClass.path">
		<fileset dir="${distrib}/bin">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${distrib}/lib" />
	</path>

	<path id="class.path.test">
	    <fileset dir="${jar}" includes="junit*.jar" />
	</path>

	<taskdef name="junit"
	  classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
	  <classpath refid="class.path.test"/>
	</taskdef>
	
	<!-- ============================================================= -->
	<target name="help">
		<echo>This is the Ant's project file to manage BeeDeeM.</echo>
		<echo />
		<echo>Available targets are:</echo>
		<echo>        makejar: only compile and package beedem jar</echo>
		<echo>    makedistrib: prepare the full release file</echo>
		<echo>             ut: compile beedeem and run unit tests</echo>
	  <echo/>
	  <echo>  Ant version: ${ant.version}</echo>
	  <echo>  Java version: ${ant.java.version}</echo>
		<echo />
	</target>
	
  <!-- ============================================================= -->
  <!-- check Ant and Java version                                    -->
  <target name="checkversion">
    <echo>Current Ant version is: ${ant.version}</echo>
    <fail message="***   Ant 1.9.1+ required   ***">
      <!-- ant 1.9.1 introduced unless directive used in this script-->
      <condition>
        <not>
          <antversion atleast="1.9.1" />
        </not>
      </condition>
    </fail>
    <echo>  ok</echo>
    <echo>Current Java version is: ${ant.java.version}</echo>
    <fail message="***   Oracle Java SDK 1.8+ not found   ***">
      <condition>
        <not>
          <or>
            <equals arg1="1.8" arg2="${ant.java.version}" />
            <equals arg1="1.9" arg2="${ant.java.version}" />
          </or>
        </not>
      </condition>
    </fail>
    <echo>  ok</echo>
  </target>

	<!-- ============================================================= -->
	<!-- Prepare directory structure used to compile and package sof   -->
	<target name="prepare" depends="checkversion">
	  <echo/>
	  <echo>  Ant version: ${ant.version}</echo>
	  <echo>  Java version: ${ant.java.version}</echo>
    <echo/>
		<!-- Prepare the distrib directory tree -->
		<delete dir="${distrib}" />
		<mkdir dir="${Dsrc}" />
		<mkdir dir="${Dbin}" />
		<mkdir dir="${Dconf}" />
		<mkdir dir="${Dlib}" />
		<mkdir dir="${Dscripts}" />
		<mkdir dir="${Ddoc}" />
		<mkdir dir="${Dexternal}" />
	</target>

	<!-- ============================================================= -->
	<target name="is-java-eight">
	  <condition property="java.eight">
	      <equals arg1="${ant.java.version}" arg2="1.8"/>
	  </condition>
	</target>

	<target name="javac8" depends="is-java-eight" if="java.eight">
	  <javac srcdir="${Dsrc}"
	         destdir="${Dlib}"
	         classpathref="class.path"
	         debug="${distribClass.path}"
	         optimize="${compile.optimize}"
	  	     deprecation="${compile.deprecation}"
	         >
	  </javac>
	</target>

	<!-- added for TravisCI -->
	<target name="javac9" depends="is-java-eight" unless="java.eight">
	  <javac srcdir="${Dsrc}"
	         destdir="${Dlib}"
	         classpathref="distribClass.path"
	         debug="${compile.debug}"
	         optimize="${compile.optimize}"
	  	     deprecation="${compile.deprecation}"
	         >
	    <compilerarg line="--add-modules java.se.ee"/>
	  </javac>
	</target>

  <!-- ============================================================= -->
  <!-- Compile code and make software Jar                            -->
	<target name="makejar" depends="prepare">
		<!-- Copy all necessary jar files (third party librairies) -->
		<copy todir="${Dbin}">
			<fileset dir="${jar}" >
				<exclude name="hamcrest*" />
				<exclude name="junit*" />
			</fileset>
		</copy>
		<!-- Copy Configuration files -->
		<copy todir="${Dconf}">
			<fileset dir="${conf}">
        <exclude name="*.bak" />
        <exclude name="ifremer*.*" />
        <exclude name="dbms.config" />
				<exclude name="dbms_test.config" />
			</fileset>
		</copy>
		<!-- Copy files that are external binaries (Blast among others) -->
		<copy todir="${Dexternal}">
			<fileset dir="${external}" />
		</copy>
    <!-- Copy documentation files -->
    <copy todir="${Ddoc}">
      <fileset dir="${doc}" />
    </copy>
		<!-- Copy Java source code files -->
		<copy todir="${Dsrc}">
			<fileset dir="${src}">
				<exclude name="test/**" />
			</fileset>
		</copy>
		<!-- Compile source code ready for distribution-->
	  <antcall target="javac8"/>
	  <antcall target="javac9"/>
		<copy todir="${Dlib}">
			<fileset dir="${src}">
				<include name="**/*.png" />
				<include name="**/*.dsc" />
				<include name="**/*.config" />
				<include name="**/*.properties" />
				<include name="**/*.gif" />
			</fileset>
		</copy>
		<!-- Make the Jar for the full application -->
		<jar destfile="${Dbin}/${appjar}">
			<fileset dir="${Dlib}" />
			<manifest>
				<attribute name="Built-By" value="Plealog Team" />
			</manifest>
		</jar>
	</target>

	<!-- ============================================================= -->
  <!-- Compile code and make software dustribution package           -->
	<target name="makedistrib" depends="makejar">
		<!-- Copy the DBMS scripts for Mac, Linux and Windows -->
		<copy file="${scripts}/bdm.sh" todir="${Dscripts}" />
		<copy file="${scripts}/bdm.bat" todir="${Dscripts}" />
    <copy file="${scripts}/test_bdm.sh" todir="${Dscripts}" />
		<!-- Galaxy wrapper to list available DBs -->
    <copy file="${scripts}/beedeem_info.xml" todir="${Dconf}/system">
      <filterset>
        <filter token="PRG_VERSION" value="${prg.version}" />
      </filterset>
    </copy>

		<!-- Copy the DBMS main config file -->
		<copy file="${scripts}/dbms.config" todir="${Dscripts}" />
		<!-- Copy license files-->
		<copy file="${lbasedir}/LICENSE.txt" todir="${distrib}/license" />
		<copy file="${lbasedir}/NOTICE.txt" todir="${distrib}/license" />

		<!-- remove useless data -->
		<delete dir="${Dlib}" />
		<delete dir="${Dsrc}" />
		<tar tarfile="${distrib}/${apptar}" basedir="${distrib}" />
		<gzip zipfile="${distrib}/${apptar}.gz" src="${distrib}/${apptar}" />
		<delete file="${distrib}/${apptar}" />
		<delete dir="${Dbin}" />
		<delete dir="${Dconf}" />
		<delete dir="${Dexternal}" />
		<delete dir="${Ddoc}" />
		<delete dir="${Dscripts}" />
		<delete dir="${distrib}/license" />

		<!-- Copy the DBMS Ant installer files -->
		<copy file="${scripts}/config-std.properties" tofile="${distrib}/config.properties" />
		<copy file="${scripts}/envDBMS" todir="${distrib}" />
		<copy file="${scripts}/deploy-std.xml" tofile="${distrib}/deploy.xml">
			<filterset>
				<filter token="KDBMS_TBALL" value="${apptar}.gz" />
				<filter token="KDBMS_TAR" value="${apptar}" />
			</filterset>
		</copy>
		<!-- in case Ant will not be available on the target system,
         we provide it. -->
		<mkdir dir="${distrib}/ant" />
		<copy file="${scripts}/${KANT_ZIP}" todir="${distrib}/ant" />
		<!-- Package the whole stuff in a zip (natively readable on 
		     all OS, including Windows)
		 -->
		<zip destfile="${distrib}/${prg.name}-${prg.version}-distrib.zip" basedir="${distrib}" />

	</target>

	<!-- ============================================================= -->
	<!-- Compile code and run Unit Tests                               -->
	<target name="ut" depends="prepare">
		<!-- Ant/JUnit doc: https://ant.apache.org/manual/Tasks/junit.html -->
		<mkdir dir="${Dtr}" />
		<!-- Copy all necessary jar files (third party librairies) -->
		<copy todir="${Dbin}">
			<fileset dir="${jar}">
				<exclude name="ant*" />
			</fileset>
		</copy>
		<!-- Copy Java source code files -->
		<copy todir="${Dsrc}">
			<fileset dir="${src}" />
		</copy>
		<!-- Compile source code ready for distribution-->
	  <antcall target="javac8"/>
	  <antcall target="javac9"/>
		<!-- Copy resource files -->
		<copy todir="${Dlib}">
			<fileset dir="${src}">
				<include name="**/*.png" />
				<include name="**/*.dsc" />
				<include name="**/*.config" />
				<include name="**/*.properties" />
				<include name="**/*.gif" />
			</fileset>
		</copy>
		<!-- Start Test Suite -->
		<antcall target="ut2" />
	</target>

	<target name="ut2">
		<junit printsummary="yes" fork="yes" haltonfailure="yes">
			<classpath>
				<path refid="distribClass.path"/>
			</classpath>
			<formatter type="plain"/>
			<test name="test.unit.AllTests" todir="${Dtr}"/>
		</junit>
		<echo>Test results are in: ${Dtr}</echo>
	</target>

</project>
