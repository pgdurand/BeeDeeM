#!/usr/bin/env bash

# This is a BeeDeeM external task script aims at making 
# a Diamond index.
#
# This script is called by run_diamond.sh
#
# Such a BeeDeeM script is called by the task engine and
# with arguments as defined in: 
# ./scheduler/common.sh->handleBDMArgs() function

# ========================================================================================
# Section: include API
S_NAME=$(realpath "$0")
[[ -z "$BDM_CONF_SCRIPTS" ]] && script_dir=$(dirname "$S_NAME") || script_dir=$BDM_CONF_SCRIPTS
. $script_dir/scheduler/common.sh

# ========================================================================================
# Section: handle arguemnts
# Function call setting BDMC_xxx variables from cmdline arguments
handleBDMArgs $@
RET_CODE=$?
[ ! $RET_CODE -eq 0 ] && errorMsg "Wrong or missing arguments" && exit $RET_CODE
#Note: BDMC_PLATFORM is set to generic is not defined, so not need to test empty var
. $script_dir/scheduler/env_${BDMC_PLATFORM}.sh

# ========================================================================================
# Make Diamond index
cd $BDMC_INST_DIR
mkdir -p diamond.idx
chmod 755 diamond.idx
cd diamond.idx
SOFT_NAME=diamond
# Get CPU to use with Diamond
CFG_SCHEDULER="$script_dir/scheduler/$(getScheduler)_${BDMC_PLATFORM}.cfg"
CFG_NCPUS=$(getResource $CFG_SCHEDULER $SOFT_NAME "c")
[ ! $? -eq 0 ] && errorMsg "Unable to get CPU info to submit $SOFT_NAME job" && exit $RET_CODE
SOFT_VER=$(getResource $CFG_SCHEDULER $SOFT_NAME "v")
[ ! $? -eq 0 ] && errorMsg "Unable to get version for $SOFT_NAME" && exit $RET_CODE
# prepare properties file
echo "Making $SOFT_NAME $SOFT_VER bank in: $PWD"
echo "key=$SOFT_NAME" > index.properties
echo "version=$SOFT_VER" >> index.properties
# Run Diamond
activateEnv "$SOFT_NAME" "$SOFT_VER"
[ ! $? -eq 0 ] && exit 1
CMD="cat ../${BDMC_BANK_NAME}[[:digit:]]* | diamond makedb --threads $CFG_NCPUS --db ${BDMC_BANK_NAME}"
echo $CMD
eval $CMD
RET_CODE=$?
chmod 644 *
deActivateEnv "$SOFT_NAME" "$SOFT_VER"
exit $RET_CODE
